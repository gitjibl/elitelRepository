//频率（概率）分析
(function () {

    /*
     *正态累积分布曲线。
     *a：横坐标。
     */
    Math.normsdist = function (a) {
        var p = 0.2316419,
        b1 = 0.31938153,
        b2 = -0.356563782,
        b3 = 1.781477937,
        b4 = -1.821255978,
        b5 = 1.330274429;

        var t = 1 / (1 + p *  Math.abs(a));

        var rtn = 1 - (1 / (Math.sqrt(2 * Math.PI)) * Math.exp(-1 * Math.pow(a, 2) / 2)) * (b1 * t + b2 * Math.pow(t, 2) + b3 * Math.pow(t, 3) + b4 * Math.pow(t, 4) + b5 * Math.pow(t, 5));

        if (a < 0) {
            rtn = 1 - rtn;
        }

        return rtn;
    }
    /*
     *反标准正态累积分布。（与normsdist互为反函数）
     *
     *mu：可空
     *sigma：可空
     */
    Math.normsinv = function (p, mu, sigma) {
        if (!mu) { mu = 0; }
        if (!sigma) { sigma = 1;}
        //if (p < 0 || p > 1)
            //console.error("must > 0 and < 100 ");
        //if (sigma < 0)
            //console.error("sigma must > 0");
        if (p == 0)
            return -999999;
        if (p == 1)
            return 999999;
        if (sigma == 0)
            return mu;
        var q, r, rtn;

        q = p - 0.5;

        if (Math.abs(q) <= 0.425) {
            r = .180625 - q * q;
            rtn =
		         q * (((((((r * 2509.0809287301226727 +
		                    33430.575583588128105) * r + 67265.770927008700853) * r +
		                  45921.953931549871457) * r + 13731.693765509461125) * r +
		                1971.5909503065514427) * r + 133.14166789178437745) * r +
		              3.387132872796366608)
		         / (((((((r * 5226.495278852854561 +
		                  28729.085735721942674) * r + 39307.89580009271061) * r +
		                21213.794301586595867) * r + 5394.1960214247511077) * r +
		              687.1870074920579083) * r + 42.313330701600911252) * r + 1);
        }
        else {
            if (q > 0) {
                r = 1 - p;
            } else {
                r = p;
            }

            r = Math.sqrt(-Math.log(r));

            if (r <= 5) {
                r += -1.6;
                rtn = (((((((r * 7.7454501427834140764e-4 +
                            .0227238449892691845833) * r + .24178072517745061177) *
                          r + 1.27045825245236838258) * r +
                         3.64784832476320460504) * r + 5.7694972214606914055) *
                       r + 4.6303378461565452959) * r +
                      1.42343711074968357734)
                     / (((((((r *
                              1.05075007164441684324e-9 + 5.475938084995344946e-4) *
                             r + .0151986665636164571966) * r +
                            .14810397642748007459) * r + .68976733498510000455) *
                          r + 1.6763848301838038494) * r +
                         2.05319162663775882187) * r + 1);
            } else {
                r += -5;
                rtn = (((((((r * 2.01033439929228813265e-7 +
                            2.71155556874348757815e-5) * r +
                           .0012426609473880784386) * r + .026532189526576123093) *
                         r + .29656057182850489123) * r +
                        1.7848265399172913358) * r + 5.4637849111641143699) *
                      r + 6.6579046435011037772)
                     / (((((((r *
                              2.04426310338993978564e-15 + 1.4215117583164458887e-7) *
                             r + 1.8463183175100546818e-5) * r +
                            7.868691311456132591e-4) * r + .0148753612908506148525)
                          * r + .13692988092273580531) * r +
                         .59983220655588793769) * r + 1);
            }

            if (q < 0.0) {
                rtn = -rtn;
            }
        }

        return mu + sigma * rtn;
    }
    /*
     *0刻度与0.001刻度之间的差值。
     */
    Math.betweenZoneFirst = 0.0329;
    /*
     *概率转X坐标。
     */
    Math.percent2X = function (percent) {
        //if (percent < 0.01 || percent > 99.99) {
            //console.error("x error");
        //}
        return Math.normsinv(percent * 0.01) - Math.normsinv(0.01 * 0.01) + Math.betweenZoneFirst;
    }
    /*
     *X坐标转概率。
     */
    Math.x2Percent = function (x) {
        x -= Math.betweenZoneFirst;
        var min = Math.normsinv(0.01 * 0.01);
        //if (x < 0 || x > -2 * min) {
            //console.error("x error");
        //}
        return Math.normsdist(x + Math.normsinv(0.01 * 0.01))*100.0;
    }

}())